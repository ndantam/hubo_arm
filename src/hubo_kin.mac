/* Copyright (c) 2012, Georgia Tech Research Corporation
 * All rights reserved.
 *
 * Author(s): Neil T. Dantam <ntd@gatech.edu>
 * Georgia Tech Humanoid Robotics Lab
 * Under Direction of Prof. Mike Stilman
 *
 *
 * This file is provided under the following "BSD-style" License:
 *
 *
 *   Redistribution and use in source and binary forms, with or
 *   without modification, are permitted provided that the following
 *   conditions are met:
 *
 *   * Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *
 *   * Redistributions in binary form must reproduce the above
 *     copyright notice, this list of conditions and the following
 *     disclaimer in the documentation and/or other materials provided
 *     with the distribution.
 *
 *   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
 *   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 *   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 *   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 *   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
 *   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 *   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 *   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
 *   USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 *   AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 *   LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 *   ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *   POSSIBILITY OF SUCH DAMAGE.
 *
 */

load("/usr/share/amino/amino.mac");


T01 :  tf_roty(q(1));
T12 :  tf_rotx(q(2));
T23 :  tf_tran(0, 0, -.17914) . tf_rotz(q(3)) ;
T34 :  tf_roty(q(4));
T45 :  tf_tran(0, 0, -.18159) . tf_rotz(q(5)) ;
T56 :  tf_roty(q(6));

TT : [T01, T12, T23, T34, T45, T56]$
TA : [
[0,1,0,0], /* 01 */
[1,0,0,0], /* 12 */
[0,0,1,0], /* 23 */
[0,1,0,0], /* 34 */
[0,0,1,0], /* 45 */
[0,1,0,0]  /* 56 */
]$

TP : tf_pyramid(TT)$

TFee : matrix(
  [1, 0, 0, 0],
  [0, 1, 0, 0],
  [0, 0, 1, 0],
  [0, 0, 0, 1] );

tf_e : last(TP) . TFee$

J : spatial_jacobian( TT, TA, TFee);

with_stdout("hubo_kin.f",
  /* FK */
  print("      Subroutine hubo_arm_kin (q, R, v, J)"),
  print("      Double Precision q(6)"),
  print("      Double Precision R(3,3)"),
  print("      Double Precision v(3,1)"),
  print("      Double Precision J(6,6)"),
  fortran( 'R = submatrix( 4, tf_e, 4 ) ),
  fortran( 'v = submatrix( 4, tf_e, 1, 2, 3 ) ),
  fortran( 'J = J ),
  print("      Return"),
  print("      End")

);

